initSidebarItems({"constant":[["MAX_STRUCTURED_DATA_SIZE_IN_BYTES","Maximum allowed size for a Structured Data to grow to"]],"enum":[["Authority","An entity that can act as a source or destination of a message."],["Data","This is the data types routing handles in the public interface"],["DataIdentifier","An identifier to address a data chunk."],["Event","An Event raised by a `Node` or `Client` via its event sender."],["InterfaceError","The type of errors that can occur if routing is unable to handle a send request."],["RequestContent","The request types"],["ResponseContent","The response types"],["RoutingError","The type of errors that can occur during handling of routing events."],["RoutingMessage","Variant type to hold `either` a request or response."]],"fn":[["backup_to_normal","Converts backup `ImmutableData` name to normal name."],["backup_to_sacrificial","Converts backup `ImmutableData` name to sacrificial name."],["normal_to_backup","Converts normal `ImmutableData` name to backup name."],["normal_to_sacrificial","Converts normal `ImmutableData` name to sacrificial name."],["sacrificial_to_backup","Converts sacrificial `ImmutableData` name to backup name."],["sacrificial_to_normal","Converts sacrificial `ImmutableData` name to normal name."]],"struct":[["Client","Interface for sending and receiving messages to and from a network of nodes in the role of a client."],["FullId","Network identity component containing name, and public and private keys."],["ImmutableData","An immutable chunk of data."],["ImmutableDataBackup","Backup types"],["ImmutableDataSacrificial","Sacrificial types"],["MessageId","Unique ID for messages"],["Node","Interface for sending and receiving messages to and from other nodes, in the role of a full routing node."],["NodeInfo","Info about nodes in the routing table."],["PlainData","Plain data with a name and a value."],["PublicId","Network identity component containing name and public keys."],["RequestMessage","A request message wrapper"],["ResponseMessage","A response message wrapper"],["SignedMessage","Wrapper around a routing message, signed by the originator of the message."],["StructuredData","Mutable structured data."]]});